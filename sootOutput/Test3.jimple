public class Test3 extends java.lang.Object
{

    public static void main(java.lang.String[])
    {
        java.lang.String[] args;
        long tmp;
        java.io.PrintStream tmpRef;

        args := @parameter0: java.lang.String[];
        staticinvoke <Test3: void func1(int)>(100);
        staticinvoke <Test3: void func2(int)>(10);
        tmp = <Test1: long gotoCount>;
        tmp = tmp + 1L;
        <Test1: long gotoCount> = tmp;
        tmpRef = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke tmpRef.<java.io.PrintStream: void println(long)>(tmp);
        return;
    }

    public static void func1(int)
    {
        int x, m, temp$0;
        long tmp;
        java.io.PrintStream tmpRef;

        x := @parameter0: int;
        m = 1;
        tmp = <Test1: long gotoCount>;
        tmp = tmp + 1L;
        <Test1: long gotoCount> = tmp;
        tmpRef = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke tmpRef.<java.io.PrintStream: void println(long)>(tmp);
        if x == 0 goto label0;

        tmp = <Test1: long gotoCount>;
        tmp = tmp + 1L;
        <Test1: long gotoCount> = tmp;
        tmpRef = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke tmpRef.<java.io.PrintStream: void println(long)>(tmp);
        goto label1;

     label0:
        tmp = <Test1: long gotoCount>;
        tmp = tmp + 1L;
        <Test1: long gotoCount> = tmp;
        tmpRef = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke tmpRef.<java.io.PrintStream: void println(long)>(tmp);
        nop;

     label1:
        tmp = <Test1: long gotoCount>;
        tmp = tmp + 1L;
        <Test1: long gotoCount> = tmp;
        tmpRef = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke tmpRef.<java.io.PrintStream: void println(long)>(tmp);
        nop;

     label2:
        nop;
        tmp = <Test1: long gotoCount>;
        tmp = tmp + 1L;
        <Test1: long gotoCount> = tmp;
        tmpRef = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke tmpRef.<java.io.PrintStream: void println(long)>(tmp);
        if x > 0 goto label3;

        tmp = <Test1: long gotoCount>;
        tmp = tmp + 1L;
        <Test1: long gotoCount> = tmp;
        tmpRef = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke tmpRef.<java.io.PrintStream: void println(long)>(tmp);
        goto label4;

     label3:
        nop;
        temp$0 = x - m;
        x = temp$0;
        tmp = <Test1: long gotoCount>;
        tmp = tmp + 1L;
        <Test1: long gotoCount> = tmp;
        tmpRef = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke tmpRef.<java.io.PrintStream: void println(long)>(tmp);
        goto label2;

     label4:
        nop;
        tmp = <Test1: long gotoCount>;
        tmp = tmp + 1L;
        <Test1: long gotoCount> = tmp;
        tmpRef = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke tmpRef.<java.io.PrintStream: void println(long)>(tmp);
        return;
    }

    public static void func2(int)
    {
        int a, n, temp$0, temp$1;
        long tmp;
        java.io.PrintStream tmpRef;

        a := @parameter0: int;
        n = 1;
        tmp = <Test1: long gotoCount>;
        tmp = tmp + 1L;
        <Test1: long gotoCount> = tmp;
        tmpRef = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke tmpRef.<java.io.PrintStream: void println(long)>(tmp);
        if a == 0 goto label0;

        tmp = <Test1: long gotoCount>;
        tmp = tmp + 1L;
        <Test1: long gotoCount> = tmp;
        tmpRef = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke tmpRef.<java.io.PrintStream: void println(long)>(tmp);
        goto label1;

     label0:
        tmp = <Test1: long gotoCount>;
        tmp = tmp + 1L;
        <Test1: long gotoCount> = tmp;
        tmpRef = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke tmpRef.<java.io.PrintStream: void println(long)>(tmp);
        nop;

     label1:
        tmp = <Test1: long gotoCount>;
        tmp = tmp + 1L;
        <Test1: long gotoCount> = tmp;
        tmpRef = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke tmpRef.<java.io.PrintStream: void println(long)>(tmp);
        nop;

     label2:
        nop;
        tmp = <Test1: long gotoCount>;
        tmp = tmp + 1L;
        <Test1: long gotoCount> = tmp;
        tmpRef = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke tmpRef.<java.io.PrintStream: void println(long)>(tmp);
        if a < 100 goto label3;

        tmp = <Test1: long gotoCount>;
        tmp = tmp + 1L;
        <Test1: long gotoCount> = tmp;
        tmpRef = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke tmpRef.<java.io.PrintStream: void println(long)>(tmp);
        goto label4;

     label3:
        nop;
        temp$0 = a;
        temp$1 = temp$0 + n;
        a = temp$1;
        tmp = <Test1: long gotoCount>;
        tmp = tmp + 1L;
        <Test1: long gotoCount> = tmp;
        tmpRef = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke tmpRef.<java.io.PrintStream: void println(long)>(tmp);
        goto label2;

     label4:
        nop;
        tmp = <Test1: long gotoCount>;
        tmp = tmp + 1L;
        <Test1: long gotoCount> = tmp;
        tmpRef = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke tmpRef.<java.io.PrintStream: void println(long)>(tmp);
        return;
    }

    public void <init>()
    {
        Test3 this;
        long tmp;
        java.io.PrintStream tmpRef;

        this := @this: Test3;
        specialinvoke this.<java.lang.Object: void <init>()>();
        tmp = <Test1: long gotoCount>;
        tmp = tmp + 1L;
        <Test1: long gotoCount> = tmp;
        tmpRef = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke tmpRef.<java.io.PrintStream: void println(long)>(tmp);
        return;
    }
}
